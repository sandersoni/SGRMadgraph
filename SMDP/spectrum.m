(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Input::Initialization:: *)
SetDirectory[Directory[]];
Print[NotebookFileName[]];
nevents=10000; (*number of events per mg5 run*)
lm\[Chi]start = 6.; (*Log10 DM mass in GeV*)
lm\[Chi]end=6.;
lm\[Chi]steps=2.;(*number of data points along m\[Chi]*)
lm\[Chi]step=If[lm\[Chi]start!=lm\[Chi]end,(lm\[Chi]end-lm\[Chi]start)/(lm\[Chi]steps-1.),Null];
lmAstart=Log10[0.05];(*Log10 dark photon mass in GeV*)
lmAend=Log10[0.05];
lmAsteps=2.;(*number of data points along mA*)
lmAstep=If[lmAend!=lmAstart,(lmAend-lmAstart)/(lmAsteps-1.),Null];
gsm = 10.^-8;(*dark photon - sm photon mixing parameter*)

(*fixedform is what makes the numbers nice to print to a file*)
StringPadLeft["",1];(*this must be evaluated first for no evident reason*)fixedform[numd_,data_]:=Module[{ef},ef[s_String/;StringTake[s,1]=="-"]:="-"<>StringPadLeft[StringTake[s,{2,-1}],2,"0"];
ef[s_String]:="+"<>StringPadLeft[s,2,"0"];
NumberForm[data,{numd,numd},ExponentFunction->(#&),NumberSigns->{"-"," "},NumberFormat:>(Row[{StringPadRight[#1,numd+2,"0"],"E",ef[#3]}]&)]]

hawc={{0.5,2.2 10^-12},{1.6,8.8 10^-13},{5.0,2.8 10^-13},{15.7,8.1 10^-14},{50,6.3 10^-14}};
(*TeV / cm^2 / s for each bin, first number in element is left side of bin*)
(*Do[*)
$mg5outputfile = "dvb";
$inputfile="input";
$mg5runfile="mg5run";
$pythiaoutputfile="pythiaoutput";
$pythonoutputfile="photonenergy";
$resultsfile="eflux"<>ToString[$KernelID];
build=0;
talpha="thermal";
au=1.49598 10^11 *100;(*distance from earth to sun in cm*)



(* ::Input::Initialization:: *)
intab=Table[{lmx,lma},{lmx,lm\[Chi]start,lm\[Chi]end,lm\[Chi]step},{lma,lmAstart,lmAend,lmAstep}];
(*ScanMadgraph requires a list of tuples containing {lm\[Chi],lmA} in each entry, generated above by intab*)
ScanMadgraph[partable_]:=(
If[FileExistsQ[$mg5runfile],DeleteFile[$mg5runfile]];
If[DirectoryQ[$mg5outputfile],DeleteDirectory[$mg5outputfile,DeleteContents->True]];
mg5run={"import model ./SMDP_UFO/",
 "set automatic_html_opening False",
 "generate ~xd ~xd~ > dvb dvb",
"output " <> $mg5outputfile,
"launch "<>$mg5outputfile,
"shower = Pythia8",
"set nevents "<>ToString[nevents],
"set WDVB Auto",
"set gsm "<>ToString[fixedform[6,gsm]],
"set ptj 0.0",
"set pta 0.0",
"set ptl 0.0",
"set etaj -1.0",
"set etaa -1.0",
"set etal -1.0\n"};
Export[$mg5runfile,mg5run,"text"];
runfile=OpenAppend[$mg5runfile,PageWidth-> 500];
tab=Flatten[partable,1];
Do[
WriteString[runfile,"set mxd " <> ToString[fixedform[6,10.^tab[[i,1]]]]<>"\n"];
WriteString[runfile,"set mdvb "<>ToString[fixedform[6,10.^tab[[i,2]]]]<>"\n"];
WriteString[runfile,"set ebeam1 "<>ToString[fixedform[6,10.^tab[[i,1]]*1.00001]]<>"\n"];
WriteString[runfile,"set ebeam2 "<>ToString[fixedform[6,10.^tab[[i,1]]*1.00001]]<>"\n"];
If[i!=Length[tab],WriteString[runfile,"launch "<>$mg5outputfile<>"\n"]];
,{i,Length[tab]}];
Close[runfile];
Run["mg5_aMC "<>$mg5runfile];)
ScanMadgraph[intab];


(* ::Input::Initialization:: *)
(*pythiaread[] for all run folders in the mg5outputfile reads all the m\[Chi] and mA masses from the banners, then decompresses the pythia events. The python file read.py then reads the pythia files, and extracts the photon energy spectrum. *)
pythiaread[]:=
(fn=FileNames[All,$mg5outputfile<>"/Events"];
fnb=fn;
Do[
fnb[[fni]]=fn[[fni]]<>"/"<>StringTake[fn[[fni]],{StringPosition[fn[[fni]],"run_"][[1,1]],StringLength[fn[[fni]]]}]<>"_tag_1_banner.txt",{fni,1,Length[fn]}];

Do[fno=OpenRead[fnb[[fni]]];
fnf=Find[fno,"# mxd"];
m\[Chi]str=StringTake[fnf,{StringPosition[fnf," 52 "][[1,2]]+1,StringPosition[fnf," # mxd"][[1,1]]-1}];
m\[Chi]read=ToExpression[StringReplace[m\[Chi]str,{"e+"-> "*10^","e-"-> "*10^-"}]];
fnf=Find[fno,"# mdvb"];
m\[Chi]str=StringTake[fnf,{StringPosition[fnf," 100001 "][[1,2]]+1,StringPosition[fnf," # mdvb"][[1,1]]-1}];
mAread=ToExpression[StringReplace[m\[Chi]str,{"e+"-> "*10^","e-"-> "*10^-"}]];
If[FileExistsQ[$pythiaoutputfile<>ToString[fni]],DeleteFile[$pythiaoutputfile<>ToString[fni]]];
Run["gzip -d < "<>fn[[fni]]<>"/tag_1_pythia8_events.hepmc.gz > ./"<>$pythiaoutputfile<>ToString[fni]];
If[FileExistsQ[$pythonoutputfile<>ToString[fni]],DeleteFile[$pythonoutputfile<>ToString[fni]]];
Run["python read.py "<>$pythiaoutputfile<>ToString[fni]<>" "<>$pythonoutputfile<>ToString[fni]];
photonE=(*Flatten[*)Import[$pythonoutputfile<>ToString[fni]](*]*);
Print[photonE];
(*DeleteFile[$pythiaoutputfile<>ToString[fni]];*)
DeleteFile[$pythonoutputfile<>ToString[fni]];
Close[fno];,{fni,1,Length[fn]}])
pythiaread[]



